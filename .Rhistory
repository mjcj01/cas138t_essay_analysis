names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
pssa_scores_19_total <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv")
pssa_scores_19_original <- pssa_scores_19_total %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
pssa_scores_19_ela_original <- filter(pssa_scores_19_original, Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored, pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed, pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
pssa_scores_19_total <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
pssa_scores_19_ela_original <- filter(pssa_scores_19_original, Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored, pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed, pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
pssa_scores_19_ela_original <- filter(pssa_scores_19_original, Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored, pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed, pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
View(total_test_takers_ela)
View(total_test_takers_ela)
install.packages("writexl")
library(writexl)
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay")
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay")
library(tidyverse)
library(taRifx)
library(writexl)
### Loading dataset and getting % passed and total passed
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
### Getting district level for ELA, Grade 8
### Filtering data
pssa_scores_19_ela_original <- filter(pssa_scores_19_original, Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored, pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed, pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay")
write_xlsx(passed_table_ela,"C:\\Users")
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\table.xlsx")
omitted_districts <- c("Bryn Athyn SD", "Duquesne City SD", "Wilkinsburg Borough SD")
View(pssa_scores_19_original)
View(pssa_scores_19_original)
omitted_districts <- c("Bryn Athyn SD, no public schools", "Duquesne City SD, does not offer an 8th grade", "Wilkinsburg Borough SD, does not offer an 8th grade")
View(pssa_scores_19_original)
pssa_scores_19_ela_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
pssa_scores_19_ela_original <- filter(pssa_scores_19_original,
Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored, pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed, pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored, pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed, pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_science)[names(passed_table_science) == "IDX1"] <- "school_district"
names(passed_table_science)[names(passed_table_science) == "value"] <- "total_test_takers_science"
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored, pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed, pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_science)[names(passed_table_science) == "IDX1"] <- "school_district"
names(passed_table_science)[names(passed_table_science) == "value"] <- "total_test_takers_science"
pssa_scores_19_math_original <- filter(pssa_scores_19_original,
Subject == "Math" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_math <- by(pssa_scores_19_math_original$Number.Scored, pssa_scores_19_math_original$District.Name, sum)
total_test_takers_math <- as.data.frame(total_test_takers_math)
total_passed_math <- by(pssa_scores_19_math_original$Total.Passed, pssa_scores_19_math_original$District.Name, sum)
total_passed_math <- as.numeric(total_passed_math)
percent_passed_math <- total_passed_math / total_test_takers_math$value
passed_table_math <- cbind(total_test_takers_math, total_passed_math, percent_passed_math)
names(passed_table_math)[names(passed_table_math) == "IDX1"] <- "school_district"
names(passed_table_math)[names(passed_table_math) == "value"] <- "total_test_takers_math"
passed_table_total <- cbind(passed_table_ela$school_district, passed_table_ela$percent_passed_ela,
passed_table_math$percent_passed_math, passed_table_science$percent_passed_science)
View(passed_table_total)
passed_table_total <- cbind(passed_table_ela$percent_passed_ela,
passed_table_math$percent_passed_math, passed_table_science$percent_passed_science)
passed_table_total <- cbind(percent_passed_ela, percent_passed_math, percent_passed_science)
View(passed_table_total)
passed_table_total <- as.data.frame(cbind(percent_passed_ela, percent_passed_math, percent_passed_science))
View(passed_table_total)
passed_table_total <- as.data.frame(cbind(passed_table_ela$school_district, percent_passed_ela, percent_passed_math, percent_passed_science))
passed_table_total <- as.data.frame(cbind(as.factor(passed_table_ela$school_district), percent_passed_ela, percent_passed_math, percent_passed_science))
passed_table_total <- as.data.frame(cbind(percent_passed_ela, percent_passed_math, percent_passed_science))
school_districts <- passed_table_ela$school_district
school_districts <- as.character(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math, percent_passed_science))
passed_table_total <- as.data.frame(cbind(school_districts, as.numeric(percent_passed_ela),
as.numeric(percent_passed_math), as.numeric(percent_passed_science)))
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math, percent_passed_science))
passed_table_total$percent_passed_ela <- as.numeric(passed_table_total$percent_passed_ela)
passed_table_total$percent_passed_science <- as.numeric(passed_table_total$percent_passed_science)
passed_table_total$percent_passed_math <- as.numeric(passed_table_total$percent_passed_math)
school_districts <- as.factor(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math, percent_passed_science))
passed_table_total$percent_passed_ela <- as.numeric(passed_table_total$percent_passed_ela)
passed_table_total$percent_passed_math <- as.numeric(passed_table_total$percent_passed_math)
passed_table_total$percent_passed_science <- as.numeric(passed_table_total$percent_passed_science)
school_districts <- as.factor(passed_table_ela$school_district)
library(tidyverse)
library(taRifx)
library(writexl)
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
omitted_districts <- c("Bryn Athyn SD, no public schools", "Duquesne City SD, does not offer an 8th grade", "Wilkinsburg Borough SD, does not offer an 8th grade")
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
pssa_scores_19_ela_original <- filter(pssa_scores_19_original,
Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored, pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed, pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\table.xlsx")
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored, pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed, pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_science)[names(passed_table_science) == "IDX1"] <- "school_district"
names(passed_table_science)[names(passed_table_science) == "value"] <- "total_test_takers_science"
pssa_scores_19_math_original <- filter(pssa_scores_19_original,
Subject == "Math" & Group == "All Students" & Grade == "8")
total_test_takers_math <- by(pssa_scores_19_math_original$Number.Scored, pssa_scores_19_math_original$District.Name, sum)
total_test_takers_math <- as.data.frame(total_test_takers_math)
total_passed_math <- by(pssa_scores_19_math_original$Total.Passed, pssa_scores_19_math_original$District.Name, sum)
total_passed_math <- as.numeric(total_passed_math)
percent_passed_math <- total_passed_math / total_test_takers_math$value
passed_table_math <- cbind(total_test_takers_math, total_passed_math, percent_passed_math)
names(passed_table_math)[names(passed_table_math) == "IDX1"] <- "school_district"
names(passed_table_math)[names(passed_table_math) == "value"] <- "total_test_takers_math"
school_districts <- as.factor(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math, percent_passed_science))
school_districts <- as.character(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math, percent_passed_science))
passed_table_total$percent_passed_ela <- as.numeric(passed_table_total$percent_passed_ela)
passed_table_total$percent_passed_math <- as.numeric(passed_table_total$percent_passed_math)
passed_table_total$percent_passed_science <- as.numeric(passed_table_total$percent_passed_science)
passed_table_total$school_districts <- as.factor(passed_table_total$school_districts)
View(passed_table_total)
ifelse(passed_table_total$percent_passed_ela >= 0.50, "TRUE", "FALSE")
ifelse(passed_table_total$percent_passed_ela >= 0.50 & passed_table_total$percent_passed_math >= 0.50
& passed_table_total$percent_passed_science >= 0.50, "TRUE", "FALSE")
passed_table_total$majority_passed_all <- ifelse(passed_table_total$percent_passed_ela >= 0.50 & passed_table_total$percent_passed_math >= 0.50
& passed_table_total$percent_passed_science >= 0.50, "TRUE", "FALSE")
View(passed_table_total)
View(pssa_scores_19_ela_original)
View(passed_table_ela)
View(pssa_scores_19_ela_original)
View(pssa_scores_19_original)
pssa_scores_19_original[is.na(pssa_scores_19_original)] = 0
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original[is.na(pssa_scores_19_original)] = 0
omitted_districts <- c("Bryn Athyn SD, no public schools", "Duquesne City SD, does not offer an 8th grade", "Wilkinsburg Borough SD, does not offer an 8th grade")
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
pssa_scores_19_ela_original <- filter(pssa_scores_19_original,
Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored,
pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed,
pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\table.xlsx")
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored,
pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed,
pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_science)[names(passed_table_science) == "IDX1"] <- "school_district"
names(passed_table_science)[names(passed_table_science) == "value"] <- "total_test_takers_science"
pssa_scores_19_math_original <- filter(pssa_scores_19_original,
Subject == "Math" & Group == "All Students" & Grade == "8")
total_test_takers_math <- by(pssa_scores_19_math_original$Number.Scored,
pssa_scores_19_math_original$District.Name, sum)
total_test_takers_math <- as.data.frame(total_test_takers_math)
total_passed_math <- by(pssa_scores_19_math_original$Total.Passed, pssa_scores_19_math_original$District.Name, sum)
total_passed_math <- as.numeric(total_passed_math)
percent_passed_math <- total_passed_math / total_test_takers_math$value
passed_table_math <- cbind(total_test_takers_math, total_passed_math, percent_passed_math)
names(passed_table_math)[names(passed_table_math) == "IDX1"] <- "school_district"
names(passed_table_math)[names(passed_table_math) == "value"] <- "total_test_takers_math"
school_districts <- as.character(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math,
percent_passed_science))
passed_table_total$school_districts <- as.factor(passed_table_total$school_districts)
passed_table_total$percent_passed_ela <- as.numeric(passed_table_total$percent_passed_ela)
passed_table_total$percent_passed_math <- as.numeric(passed_table_total$percent_passed_math)
passed_table_total$percent_passed_science <- as.numeric(passed_table_total$percent_passed_science)
passed_table_total$majority_passed_all <- ifelse(passed_table_total$percent_passed_ela >= 0.50 & passed_table_total$percent_passed_math >= 0.50
& passed_table_total$percent_passed_science >= 0.50, "TRUE", "FALSE")
library(tidyverse)
library(taRifx)
library(writexl)
### Loading dataset and getting % passed and total passed
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original[is.na(pssa_scores_19_original)] = 0
omitted_districts <- c("Bryn Athyn SD, no public schools", "Duquesne City SD, does not offer an 8th grade", "Wilkinsburg Borough SD, does not offer an 8th grade")
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
### Getting district level data for ELA, Grade 8
### Filtering data
pssa_scores_19_ela_original <- filter(pssa_scores_19_original,
Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored,
pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed,
pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
### Trying to figure out why 3 districts were missing from test scores.
### Districts listed in the "omitted_districts" value set do offer 8th grade for various reasons, and thus are
### excluded from the analysis
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\table.xlsx")
### Getting district level data for Science, Grade 8
### Filtering data
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored,
pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed,
pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_science)[names(passed_table_science) == "IDX1"] <- "school_district"
names(passed_table_science)[names(passed_table_science) == "value"] <- "total_test_takers_science"
### Getting district level data for Math, Grade 8
### Filtering data
pssa_scores_19_math_original <- filter(pssa_scores_19_original,
Subject == "Math" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_math <- by(pssa_scores_19_math_original$Number.Scored,
pssa_scores_19_math_original$District.Name, sum)
total_test_takers_math <- as.data.frame(total_test_takers_math)
total_passed_math <- by(pssa_scores_19_math_original$Total.Passed, pssa_scores_19_math_original$District.Name, sum)
total_passed_math <- as.numeric(total_passed_math)
percent_passed_math <- total_passed_math / total_test_takers_math$value
passed_table_math <- cbind(total_test_takers_math, total_passed_math, percent_passed_math)
names(passed_table_math)[names(passed_table_math) == "IDX1"] <- "school_district"
names(passed_table_math)[names(passed_table_math) == "value"] <- "total_test_takers_math"
### Bringing it all together
### For some reason, I had to do a very roundabout method of getting the district variable as a factor and
### the percent passed as numbers.
school_districts <- as.character(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math,
percent_passed_science))
passed_table_total$school_districts <- as.factor(passed_table_total$school_districts)
passed_table_total$percent_passed_ela <- as.numeric(passed_table_total$percent_passed_ela)
passed_table_total$percent_passed_math <- as.numeric(passed_table_total$percent_passed_math)
passed_table_total$percent_passed_science <- as.numeric(passed_table_total$percent_passed_science)
passed_table_total$majority_passed_all <- ifelse(passed_table_total$percent_passed_ela >= 0.50 & passed_table_total$percent_passed_math >= 0.50
& passed_table_total$percent_passed_science >= 0.50, "TRUE", "FALSE")
View(passed_table_total)
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
expenditures_2018_19 <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\afr_expenditures_2018_19.csv")
expenditures_and_scores <- cbind(passed_table_total, expenditures_2018_19$AIE.per.WADM)
View(expenditures_2018_19)
expenditures_2018_19 <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\afr_expenditures_2018_19.csv")
expenditures_and_scores <- cbind(passed_table_total, expenditures_2018_19$AIE.per.WADM)
View(expenditures_and_scores)
success_cost_table <- filter(expenditures_and_scores, majority_passed_all == "TRUE")
median(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 13,100.22
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 13100.22
expenditures_2018_19$AIE.per.WADM <- as.numeric(expenditures_2018_19$AIE.per.WADM)
expenditures_and_scores <- cbind(passed_table_total, expenditures_2018_19$AIE.per.WADM)
success_cost_table <- filter(expenditures_and_scores, majority_passed_all == "TRUE")
median(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 13100.22
expenditures_2018_19 <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\afr_expenditures_2018_19.csv")
expenditures_2018_19$AIE.per.WADM <- as.numeric(expenditures_2018_19$AIE.per.WADM)
expenditures_and_scores <- cbind(passed_table_total, expenditures_2018_19$AIE.per.WADM)
success_cost_table <- filter(expenditures_and_scores, majority_passed_all == "TRUE")
median(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 13100.22
median_cost_distance_graph <- ggplot(data = expenditures_and_scores, aes(x = school_districts, y = distance_from_median_cost))
median_cost_distance_graph
median_cost_distance_graph <-
ggplot(data = expenditures_and_scores, aes(x = school_districts, y = distance_from_median_cost))
median_cost_distance_graph
median_cost_distance_graph <-
ggplot(data = expenditures_and_scores, aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost)))
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, ascd(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
minimum(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
min(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 7157.59
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 13100.22
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
mean(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 10927.99
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
library(tidyverse)
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
library(tidyverse)
library(taRifx)
library(writexl)
### Loading dataset and getting % passed and total passed
pssa_scores_19_original <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\pssa_scores_19.csv") %>%
filter(grepl("SD", District.Name))
pssa_scores_19_original[is.na(pssa_scores_19_original)] = 0
omitted_districts <- c("Bryn Athyn SD, no public schools", "Duquesne City SD, does not offer an 8th grade", "Wilkinsburg Borough SD, does not offer an 8th grade")
pssa_scores_19_original$Percent.Passed <- pssa_scores_19_original$Percent.Proficient + pssa_scores_19_original$Percent.Advanced
pssa_scores_19_original$Total.Passed <- (pssa_scores_19_original$Percent.Passed/100) * pssa_scores_19_original$Number.Scored
### Getting district level data for ELA, Grade 8
### Filtering data
pssa_scores_19_ela_original <- filter(pssa_scores_19_original,
Subject == "English Language Arts" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_ela <- by(pssa_scores_19_ela_original$Number.Scored,
pssa_scores_19_ela_original$District.Name, sum)
total_test_takers_ela <- as.data.frame(total_test_takers_ela)
total_passed_ela <- by(pssa_scores_19_ela_original$Total.Passed,
pssa_scores_19_ela_original$District.Name, sum)
total_passed_ela <- as.numeric(total_passed_ela)
percent_passed_ela <- total_passed_ela / total_test_takers_ela$value
passed_table_ela <- cbind(total_test_takers_ela, total_passed_ela, percent_passed_ela)
names(passed_table_ela)[names(passed_table_ela) == "IDX1"] <- "school_district"
names(passed_table_ela)[names(passed_table_ela) == "value"] <- "total_test_takers_ela"
### Trying to figure out why 3 districts were missing from test scores.
### Districts listed in the "omitted_districts" value set do offer 8th grade for various reasons, and thus are
### excluded from the analysis
write_xlsx(passed_table_ela,"C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\table.xlsx")
### Getting district level data for Science, Grade 8
### Filtering data
pssa_scores_19_science_original <- filter(pssa_scores_19_original,
Subject == "Science" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_science <- by(pssa_scores_19_science_original$Number.Scored,
pssa_scores_19_science_original$District.Name, sum)
total_test_takers_science <- as.data.frame(total_test_takers_science)
total_passed_science <- by(pssa_scores_19_science_original$Total.Passed,
pssa_scores_19_science_original$District.Name, sum)
total_passed_science <- as.numeric(total_passed_science)
percent_passed_science <- total_passed_science / total_test_takers_science$value
passed_table_science <- cbind(total_test_takers_science, total_passed_science, percent_passed_science)
names(passed_table_science)[names(passed_table_science) == "IDX1"] <- "school_district"
names(passed_table_science)[names(passed_table_science) == "value"] <- "total_test_takers_science"
### Getting district level data for Math, Grade 8
### Filtering data
pssa_scores_19_math_original <- filter(pssa_scores_19_original,
Subject == "Math" & Group == "All Students" & Grade == "8")
### Getting sums by school district
total_test_takers_math <- by(pssa_scores_19_math_original$Number.Scored,
pssa_scores_19_math_original$District.Name, sum)
total_test_takers_math <- as.data.frame(total_test_takers_math)
total_passed_math <- by(pssa_scores_19_math_original$Total.Passed, pssa_scores_19_math_original$District.Name, sum)
total_passed_math <- as.numeric(total_passed_math)
percent_passed_math <- total_passed_math / total_test_takers_math$value
passed_table_math <- cbind(total_test_takers_math, total_passed_math, percent_passed_math)
names(passed_table_math)[names(passed_table_math) == "IDX1"] <- "school_district"
names(passed_table_math)[names(passed_table_math) == "value"] <- "total_test_takers_math"
### Bringing it all together
### For some reason, I had to do a very roundabout method of getting the district variable as a factor and
### the percent passed as numbers.
school_districts <- as.character(passed_table_ela$school_district)
passed_table_total <- as.data.frame(cbind(school_districts, percent_passed_ela, percent_passed_math,
percent_passed_science))
passed_table_total$school_districts <- as.factor(passed_table_total$school_districts)
passed_table_total$percent_passed_ela <- as.numeric(passed_table_total$percent_passed_ela)
passed_table_total$percent_passed_math <- as.numeric(passed_table_total$percent_passed_math)
passed_table_total$percent_passed_science <- as.numeric(passed_table_total$percent_passed_science)
passed_table_total$majority_passed_all <- ifelse(passed_table_total$percent_passed_ela >= 0.50 & passed_table_total$percent_passed_math >= 0.50
& passed_table_total$percent_passed_science >= 0.50, "TRUE", "FALSE")
### Brining in the expenditure table
expenditures_2018_19 <- read.csv("C:\\Users\\micha\\Documents\\Spring 2022\\CAS 138T\\Persuasive Essay\\Visualizations\\Data Sources\\afr_expenditures_2018_19.csv")
expenditures_2018_19$AIE.per.WADM <- as.numeric(expenditures_2018_19$AIE.per.WADM)
expenditures_and_scores <- cbind(passed_table_total, expenditures_2018_19$AIE.per.WADM)
success_cost_table <- filter(expenditures_and_scores, majority_passed_all == "TRUE")
mean(success_cost_table$`expenditures_2018_19$AIE.per.WADM`)
### Median is $13,100.22
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 10927.99
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost)) +
geom_col()
median_cost_distance_graph
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost, fill = majority_passed_all)) +
geom_col()
median_cost_distance_graph
expenditures_and_scores$distance_from_median_cost <- expenditures_and_scores$`expenditures_2018_19$AIE.per.WADM` - 13100.22
median_cost_distance_graph <- expenditures_and_scores %>%
mutate(school_districts = fct_reorder(school_districts, desc(distance_from_median_cost))) %>%
ggplot(aes(x = school_districts, y = distance_from_median_cost, fill = majority_passed_all)) +
geom_col()
median_cost_distance_graph
passed_table_total$majority_passed_two <-
if(passed_table_total$percent_passed_ela > 0.5 & passed_table_total$percent_passed_math > 0.5) {
cat("TRUE")
} else if(passed_table_total$percent_passed_ela > 0.5 & passed_table_total$percent_passed_science > 0.5) {
cat("TRUE")
} else if(passed_table_total$percent_passed_math > 0.5 & passed_table_total$percent_passed_science > 0.5) {
cat("TRUE")
} else {
cat("FALSE")
}
